!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(t="undefined"!=typeof globalThis?globalThis:t||self).Pollinator=s()}(this,(function(){"use strict";var t,s;!function(t){t[t.IDLE=0]="IDLE",t[t.POLLING=1]="POLLING",t[t.FINISHED=2]="FINISHED"}(t||(t={})),function(t){t.POLL="poll",t.END="end",t.ERROR="error",t.STATUS_CHANGE="statusChange"}(s||(s={}));class i{constructor(s,i){if(this._config={...{pollFnParams:void 0,conditionFn:()=>!1,delay:5e3,failRetryCount:3},...i},!s)throw Error("1st param pollFn undefined");if("function"!=typeof s)throw Error("1st param is not of function type. Instead found "+typeof s);this.pollFn=s,this._status=t.IDLE,this.previousResponse=void 0,this._retries=0,this._events={},this._poller=this._poller.bind(this),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.pause=this.pause.bind(this),this._setStatus=this._setStatus.bind(this),this.emit=this.emit.bind(this)}get status(){return this._status}emit(t,...s){t&&this._events[t]&&this._events[t].forEach((t=>t(...s)))}on(t,s){t&&s&&(this._events[t]||(this._events[t]=[]),this._events[t].push(s))}off(t,s){t&&s&&this._events[t]&&(this._events[t]=this._events[t].filter((t=>t!==s)))}_setStatus(t){t!==this._status&&(this._status=t,this.emit(s.STATUS_CHANGE,this._status))}async _poller(){try{if(this._status!==t.POLLING)return;let i;this._timer&&clearTimeout(this._timer);const e=await this.pollFn(this._config.pollFnParams);if("function"==typeof this._config.conditionFn&&(i=await this._config.conditionFn(e,this.previousResponse)),this.previousResponse=e,this.emit(s.POLL,e,this._status),!0===i)return void this.stop();this._retries=0,this._timer=setTimeout(this._poller,this._config.delay)}catch(i){if(this._timer&&clearTimeout(this._timer),this._config.failRetryCount&&this._config.failRetryCount>0&&this._config.failRetryCount>this._retries)return this._retries++,void(this._timer=setTimeout(this._poller,this._config.delay));this?._setStatus?.(t.FINISHED),this.emit(s.ERROR,i,this._status)}}start(){this._status!==t.POLLING&&(this._retries=0,this?._setStatus?.(t.POLLING),this?._poller?.())}stop(){this._status!==t.FINISHED&&(this?._setStatus?.(t.FINISHED),this._timer&&clearTimeout(this._timer),this._timer=void 0,this?.emit?.(s.END,this.previousResponse,this._status))}pause(){this?._setStatus?.(t.IDLE),this._timer&&clearTimeout(this._timer)}}return i.Event=s,i.Status=t,i}));